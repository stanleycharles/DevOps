  - name: K8s install
    hosts: all
    become: yes
    become_user: root
    tasks:
      - name: Make the Swap inactive
        command: swapoff -a
      - name: Remove Swap entry from /etc/fstab.
        lineinfile:
          dest: /etc/fstab
          regexp: swap
          state: absent
      - name: Installing Prerequisites for Kubernetes
        apt: 
          name:
            - apt-transport-https
            - ca-certificates
            - curl
            - gnupg-agent
            - vim
            - software-properties-common
          state: present
      - name: Add Google official GPG key
        apt_key:
          url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
          state: present
      - name: Add Kubernetes Repository
        apt_repository:
          repo: deb http://apt.kubernetes.io/ kubernetes-xenial main 
          state: present
          filename: kubernetes
          mode: 0600
      - name: Installing Kubernetes Cluster Packages.
        apt: 
          name:
            - kubeadm
            - kubectl
            - kubelet
          state: present
      - name: Enable service kubelet, and enable persistently
        service:
          name: kubelet
          enabled: yes
      - name: Enable ssh
        service:
          name: ssh
          enabled: yes

  - name: Configure containerd
    hosts: kubemaster:kubenodes
    become: yes
    become_user: root
    tasks:
      - name: Configure containerd
        shell: "rm /etc/containerd/config.toml; systemctl restart containerd"
      - name: Reboot kubernetes.
        reboot:
          post_reboot_delay: 10
          test_command: uptime
  - name: K8s master configure
    hosts: kubemaster
    become: yes
    become_user: vagrant
    tasks:
      - name: Init K8s cluster
        shell: sudo kubeadm init --ignore-preflight-errors=NumCPU --apiserver-advertise-address=192.168.56.101 --node-name master --pod-network-cidr=10.244.0.0/16
      - name: K8s join
        shell: sudo kubeadm token create --print-join-command
        register: cmd_output
      - name: print cmd output
        ansible.builtin.debug:
          var: cmd_output.stdout
      - name: Creates directory
        file:
          path: /$HOME/.kube
          state: directory
      - name: set up conf
        shell: "sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config; sudo chown $(id -u):$(id -g) $HOME/.kube/config"
      - name: set up flannel
        shell: "kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml"